name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Node.js dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd packages/core
        pip install -e ".[dev]"

    - name: Install Node.js dependencies
      run: |
        cd packages/typescript
        npm ci

    - name: Run Python tests
      run: |
        cd packages/core
        pytest tests/ --cov=src --cov-report=xml

    - name: Run TypeScript tests
      run: |
        cd packages/typescript
        npm test

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./packages/core/coverage.xml
        flags: unittests
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x

    - name: Python Lint
      run: |
        cd packages/core
        pip install black pylint mypy
        black . --check
        pylint src tests
        mypy src

    - name: TypeScript Lint
      run: |
        cd packages/typescript
        npm ci
        npm run lint

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build Python package
      run: |
        cd packages/core
        python -m pip install --upgrade pip
        pip install build
        python -m build

    - name: Build TypeScript package
      run: |
        cd packages/typescript
        npm ci
        npm run build

    - name: Upload Python artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: packages/core/dist/

    - name: Upload TypeScript artifacts
      uses: actions/upload-artifact@v3
      with:
        name: typescript-package
        path: packages/typescript/dist/
